[{"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/index.js":"1","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reportWebVitals.js":"2","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/App.js":"3","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/appStore.js":"4","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/appReducer.jsx":"5","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/signup/signup.jsx":"6","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/signupReducer.jsx":"7","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/signFetcher.jsx":"8","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/login/login.jsx":"9","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/loginReducer.jsx":"10","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/loginDataFetcher.jsx":"11","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/dashboard/dashboard.jsx":"12","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/userInfoReducer.jsx":"13","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/userInfoFetcher.jsx":"14","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/storage/localforage.jsx":"15"},{"size":500,"mtime":1610985460719,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610985460720,"results":"18","hashOfConfig":"17"},{"size":973,"mtime":1611059014050,"results":"19","hashOfConfig":"17"},{"size":437,"mtime":1611047294620,"results":"20","hashOfConfig":"17"},{"size":393,"mtime":1611062833712,"results":"21","hashOfConfig":"17"},{"size":3667,"mtime":1611066929459,"results":"22","hashOfConfig":"17"},{"size":541,"mtime":1611066784169,"results":"23","hashOfConfig":"17"},{"size":446,"mtime":1611057072565,"results":"24","hashOfConfig":"17"},{"size":3149,"mtime":1611066695743,"results":"25","hashOfConfig":"17"},{"size":538,"mtime":1611065975543,"results":"26","hashOfConfig":"17"},{"size":442,"mtime":1611057789762,"results":"27","hashOfConfig":"17"},{"size":3062,"mtime":1611067371651,"results":"28","hashOfConfig":"17"},{"size":533,"mtime":1611062807689,"results":"29","hashOfConfig":"17"},{"size":458,"mtime":1611062991733,"results":"30","hashOfConfig":"17"},{"size":735,"mtime":1611065349522,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"auuojl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/index.js",[],["66","67"],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reportWebVitals.js",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/App.js",["68"],"import './App.scss';\nimport ReactDom from 'react-dom';\n\nimport {Router, Switch, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './appStore';\nimport { createBrowserHistory } from 'history';\nimport SignupComponent from './components/signup/signup';\nimport LoginComponent from './components/login/login';\nimport DashboardComponent from './components/dashboard/dashboard';\n\nconst browserHistory = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={browserHistory}>\n      <Provider store={configureStore()}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <Switch>\n          <Route exact path=\"/sign-up\"><SignupComponent/> </Route>\n          <Route exact path=\"/login\"><LoginComponent/> </Route>\n          <Route exact path=\"/dashboard\"><DashboardComponent/> </Route>\n        </Switch>\n      </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/appStore.js",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/appReducer.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/signup/signup.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/signupReducer.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/signFetcher.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/login/login.jsx",["69"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {Col} from 'react-bootstrap';\nimport './login.scss';\nimport { loginDataFeatcher } from '../../dataFetchers/loginDataFetcher';\nimport { withRouter } from 'react-router-dom';\nimport { storage } from \"../../storage/localforage\";\n\nclass LoginComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        }\n        const userGUID = storage.getItem(\"userGUID\");\n        if(userGUID) {\n            this.props.history.push(`/dashboard/?userGUID=${userGUID}`);\n        }\n        this.onLoginClick = this.onLoginClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props && this.props.data !== prevProps.data) {\n            if(this.props.data.success) {\n                this.props.history.push(`/dashboard/?userGUID=${this.props.data.userGUID}`);\n                storage.setItem(\"userGUID\", this.props.data.userGUID)\n            }\n        }\n\n        if(this.props && this.props.error !== prevProps.error) {\n\n        }\n    }\n\n    onLoginClick(e) {\n        e.preventDefault();\n        const payload = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.loginDataFeatcher(payload);\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h5 className=\"text-center login\"> Login page</h5>\n                <div className=\"signup\">\n                    <Form noValidate onSubmit={this.onLoginClick}>\n                        <Form.Group controlId=\"email\" size=\"lg\">   \n                            <Form.Control autoFocus type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Enter Email Address\" required>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" size=\"lg\">\n                            <Form.Control autoFocus type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Enter Password\" required>\n                            </Form.Control>\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\">Login</Button>\n                    </Form>\n                </div>\n                {this.props.error &&\n                <div className=\"text-danger\">{this.props.error.message}</div>\n                }\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.loginData.error,\n        data: state.loginData.data,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginDataFeatcher: (data) => dispatch(loginDataFeatcher(data))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginComponent));","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/loginReducer.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/loginDataFetcher.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/components/dashboard/dashboard.jsx",["70"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport './dashboard.scss';\nimport { userInfoDataFetcher } from '../../dataFetchers/userInfoFetcher';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { storage } from '../../storage/localforage';\nimport { Container } from 'react-bootstrap';\n\nconst queryString = require('query-string');\n\nclass DashboardComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        console.log(this.props.location);\n        const queryParamString = this.props.location.search;\n        let queryParam = queryString.parse(queryParamString);\n        this.state = {\n            userGUID: queryParam.userGUID\n        };\n        this.props.userInfoDataFetcher(this.state.userGUID);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props && this.props.data !== prevProps.data) {\n            console.log(this.props.data);\n\n        }\n\n        if (this.props && this.props.error !== prevProps.error) {\n\n        }\n    }\n\n    onSelect(e) {\n        storage.removeItem(\"userGUID\");\n        this.props.history.push(\"/login\");\n    }\n\n\n    render() {\n        const userInfo = this.props.data;\n\n        return (\n            <Container>\n                <Navbar>\n                    <Navbar.Brand className=\"home\">Home Page</Navbar.Brand>\n                    <Navbar.Toggle />\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                            <a onClick={this.onSelect}>logout</a>\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                </Navbar>\n                {\n                    userInfo && userInfo.data &&\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>UserGUID</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.userGUID}</td>\n                                <td>{userInfo.data.fname}</td>\n                                <td>{userInfo.data.lname}</td>\n                                <td>{userInfo.data.email}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.userData.error,\n        data: state.userData.data,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userInfoDataFetcher: (userGUID) => dispatch(userInfoDataFetcher(userGUID))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardComponent));","/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/reducers/userInfoReducer.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/dataFetchers/userInfoFetcher.jsx",[],"/Users/vipinjoshi/Documents/github/simplilearn-assignment/react-web-app/web-app/src/storage/localforage.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"79","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":54,"column":29,"nodeType":"82","endLine":54,"endColumn":56},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]